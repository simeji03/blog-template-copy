// メディアクエリー（スマホベース）
@mixin mq-up($breakpoint: tab) {
  @media #{map-get($breakpoints-up, $breakpoint)} {
    @content;
  }
}

// メディアクエリー（PCベース）
@mixin mq-down($breakpoint: tab) {
  @media #{map-get($breakpoints-down, $breakpoint)} {
    @content;
  }
}

// フォント関連（フォントサイズとラインハイト、ウェイトを一括指定）
@mixin fz($size, $height: false, $weight: false) {
  font-size: $size + px; /*IE9以下で反映されるよう記述*/
  font-size: ($size / $font-size-base) + rem;

  @if $weight {
    font-weight: $weight;
  }

  @if $height {
    line-height: $height / $size;
  }
}

// アンダーラインアニメーション
@mixin hover-underline($type: fade, $dir: null, $weight: 2px, $color: #000) {
  @if $dir == null {
    @if $type == fade {
      $dir: "top";
    } @else if $type == slide {
      $dir: "center";
    }
  }

  position: relative;
  display: inline-block;
  text-decoration: none;
  &::after {
    position: absolute;
    left: 0;
    content: "";
    width: 100%;
    height: $weight;
    background: $color;
    @if $type == fade {
      transition: 0.3s;
      opacity: 0;
      visibility: hidden;
      @if $dir == bottom {
        bottom: $weight * -4;
      } @else {
        bottom: $weight;
      }
    } @else if $type == slide {
      bottom: $weight * -2;
      transform: scale(0, 1);
      transition: transform 0.3s;
      @if $dir == left-right or $dir == right-in-left {
        transform-origin: left top;
      } @else if $dir == right-left or $dir == left-in-right {
        transform-origin: right top;
      } @else {
        transform-origin: center top;
      }
    }
  }
  &:hover::after {
    @if $type == fade {
      bottom: $weight * -2;
      opacity: 1;
      visibility: visible;
    } @else if $type == slide {
      @if $dir == left-in-right {
        transform-origin: left top;
      } @else if $dir == right-in-left {
        transform-origin: right top;
      }
      transform: scale(1, 1);
    }
  }
}
